--------YouTube channel-------

https://www.youtube.com/@Javatechie



Docker is a powerful tool that is used to build, packaging and deploying 
application efficiently. It is a set of Platform as a service(PaaS) products
that use operating system level virtualization to deliver software in packages 
called containers. Containers are isolated from one another and bundle their own
software, libraries, dependencies and configuration files, they can communicate 
to each other through well-defined channel. All containers are run by a single
operating system kernel and therefor use fewer resources than a virtual machine.

You can run the docker image as a docker container in any machine where docker
is installed without depending on the operating system.



------------------Key Components of Docker------------------------

Docker Engine : It is core part of Docker, that handle the creation and management
               of container.
Docker Image : It is a read-only template that is used for creation of containers and
               packaging application code and dependencies.
Docker Hub   : It is a cloud based repository that is used for finding and sharing
               the container images.
Docker file   : It is a script that containing instructions to build a docker image.
Docker Registry: It is a storage distribution system for docker image where you
                can store the images in both public and private modes.
 

Note :- The Docker File use Domain specific Language(DSL) and contains instruction
        for creating images. While creating your application you should crate a 
        Docker file in order since the Docker daemon(It is background service that
        manage containers on system) rum all the instruction from top to bottom.





--------------Instruction to use Docker:-------------------------

1 . enable wsl in system
    { wsl --install : for installing the default Linux Ubuntu
      wsl --install -d <Distribution Name> : to install a particular Linux distribution.
      wsl -l -o  : For get the list of online available distribution.}

2: If not login with root user than create username and password
3: Install docker desktop.
4: create the docker file of the Application.
5: Run command : docker build -t docker-explanation:latest . (run this command in Dockerfile directory for creating docker image)
6: Docker images : run command for the list of docker images in system.







----------Second way tp run a container using yml file--------------

1: create a docker-compose.yml file in root directory where pom.xml file resides
2: add all the services that your application is using
EXP:
version: '3.8'
services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db

  springboot-app:
    image: journal:v3
    container_name: journal-collabplatform
    ports:
      - 8080:8080
    depends_on:
      - mongodb
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017

volumes:
  mongo_data:

3: Run command to run the application : docker-compose up --build
4: docker-compose down - run command to stop and remove the containers.
5: for seperatly stop containers - docker stop containername1 containername2
5: For seperatly remove container - docker rm containername1 containername2